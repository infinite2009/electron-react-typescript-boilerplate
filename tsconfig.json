{
  "compileOnSave": false,
  "compilerOptions": {
    /* Basic Options */
    "target": "es6",
    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "module": "commonjs",
    /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "jsx": "react",
    /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "sourceMap": true,
    /* Generates corresponding '.map' file. */
    "lib": [
      "esNext",
      "dom"
    ],
    /* Strict Type-Checking Options */
    "strict": true,
    /* Enable all strict type-checking options. */
    /* Additional Checks */
    /* Module Resolution Options */
    "moduleResolution": "node",
    /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "./",
    /* Base directory to resolve non-absolute module names. */
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    "typeRoots": [
      "node_modules/@types",
      "src/declarations"
    ],
    /* List of folders to include type definitions from. */
    "types": [],
    /* Type declaration files to be included in compilation. */
    "allowSyntheticDefaultImports": true,
    /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,
    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    /* Source Map Options */
    /* Experimental Options */
    "experimentalDecorators": true,
    /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true
    /* Enables experimental support for emitting type metadata for decorators. */
  }
}
